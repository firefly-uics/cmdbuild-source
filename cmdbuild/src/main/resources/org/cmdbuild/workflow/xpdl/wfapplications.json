{
	selectLookupById: {
		description: 'select a lookup from it\'s id',
		params: [
		{type: 'INT', mode: 'IN', id: 'LookupId'},
		{type: 'LOOKUP',mode: 'OUT',id: 'Lookup'}
		],
		extattrs: [{ToolAgentClass: 'org.cmdbuild.shark.toolagent.SelectLookupToolAgent'}]
	},
	selectLookupByTypeDesc: {
		description: 'select a lookup from it\'s type and description',
		params: [
		{type: 'STRING', mode: 'IN', id: 'Type'},
		{type: 'STRING', mode: 'IN', id: 'Description'},
		{type: 'LOOKUP',mode: 'OUT',id: 'Lookup'}
		],
		extattrs: [{ToolAgentClass: 'org.cmdbuild.shark.toolagent.SelectLookupToolAgent'}]
	},	
	selectLookupByTypeCode: {
		description: 'select a lookup from it\'s type and code',
		params: [
		{type: 'STRING', mode: 'IN', id: 'Type'},
		{type: 'STRING', mode: 'IN', id: 'Code'},
		{type: 'LOOKUP',mode: 'OUT',id: 'Lookup'}
		],
		extattrs: [{ToolAgentClass: 'org.cmdbuild.shark.toolagent.SelectLookupToolAgent'}]
	},
	selectLookup: {
		description: 'select a lookup description from its id',
		params: [
		         {type:'INT',mode:'IN',id:'LookupId'},
		         {type:'STRING',mode:'OUT',id:'LookupDescription'}
		],
		extattrs: [{ToolAgentClass: 'org.cmdbuild.shark.toolagent.SelectLookupToolAgent'}]
	},
	getCurrentUserReference: {
		description: 'get the reference to the current user',
		params: [{
			type: 'REFERENCE', mode: 'OUT', id: 'UserRef'
		}],
		extattrs: [{ToolAgentClass: 'org.cmdbuild.shark.toolagent.GetCurrentUserReferenceToolAgent'}]
	},
	getCurrentGroupReference: {
		description: 'get the reference to the current group',
		params: [{
			type: 'REFERENCE', mode: 'OUT', id: 'GroupRef'
		}],
		extattrs: [{ToolAgentClass: 'org.cmdbuild.shark.toolagent.GetCurrentGroupReferenceToolAgent'}]
	},
	selectRelations: {
		description: 'select the card in relations with a specific card on a specific domain by classname, cardid and domainame',
		params: [
			{type: 'STRING', mode: 'IN', id: 'DomainName'},
			{type: 'STRING', mode: 'IN', id: 'ClassName'},
			{type: 'INT', mode: 'IN', id: 'CardId'},
			{type: 'REFERENCES', mode: 'OUT', id: 'Refs'}
		],
		extattrs: [{ToolAgentClass: 'org.cmdbuild.shark.toolagent.SelectReferenceToolAgent'}]
	},
	selectRelationsByReference: {
		description: 'select the card in relations with a specific card on a specific domain by reference card and domainame',
		params: [
			{type: 'STRING', mode: 'IN', id: 'DomainName'},
			{type: 'REFERENCE', mode: 'IN', id: 'Ref'},
			{type: 'REFERENCES', mode: 'OUT', id: 'Refs'}
		],
		extattrs: [{ToolAgentClass: 'org.cmdbuild.shark.toolagent.SelectRelationToolAgent'}]
	},
	selectReferenceByCode: {
		description: 'select a reference by classname and code attribute',
		params: [
			{type: 'STRING', mode: 'IN', id: 'ClassName'},
			{type: 'STRING', mode: 'IN', id: 'Code'},
			{type: 'REFERENCE', mode: 'OUT', id: 'OutRef'}
		],
		extattrs: [{ToolAgentClass: 'org.cmdbuild.shark.toolagent.SelectReferenceToolAgent'}]
	},
	selectReferenceByCustomAttribute: {
		description: 'select a reference by classname and an attribute (the first matching reference will be returned)',
		params: [
			{type: 'STRING', mode: 'IN', id: 'ClassName'},
			{type: 'STRING', mode: 'IN', id: 'AttributeName'},
			{type: 'STRING', mode: 'IN', id: 'AttributeValue'},
			{type: 'REFERENCE', mode: 'OUT', id: 'OutRef'}
		],
		extattrs: [{ToolAgentClass: 'org.cmdbuild.shark.toolagent.SelectReferenceToolAgent'}]
	},
	
	sendMail: {
		description: 'send an email',
		params: [
			{type: 'STRING', mode: 'IN', id: 'FromAddresses'},
			{type: 'STRING', mode: 'IN', id: 'ToAddresses'},
			{type: 'STRING', mode: 'IN', id: 'CcAddresses'},
			{type: 'STRING', mode: 'IN', id: 'BccAddresses'},
			{type: 'STRING', mode: 'IN', id: 'Subject'},
			{type: 'STRING', mode: 'IN', id: 'Content'},
			{type: 'STRING', mode: 'IN', id: 'UrlAttachments'}
		],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.MailToolAgent',
			AppName: 'org.cmdbuild.shark.toolagent.SafeMailToolAgent',
			AppMode: '0'
		}]
	},
	concat: {
		description: 'concatenate 2 strings',
		params: [
		    {type: 'STRING', mode: 'IN', id: 'InputString1'},
		    {type: 'STRING', mode: 'IN', id: 'InputString2'},
		    {type: 'STRING', mode: 'OUT', id: 'OutputString'}
		],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'OutputString = InputString1.concat(InputString2);'
		}]
	},
	concat3: {
		description: 'concatenate 3 strings',
		params: [
		    {type: 'STRING', mode: 'IN', id: 'InputString1'},
		    {type: 'STRING', mode: 'IN', id: 'InputString2'},
		    {type: 'STRING', mode: 'IN', id: 'InputString3'},
		    {type: 'STRING', mode: 'OUT', id: 'OutputString'}
		],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'OutputString = InputString1.concat(InputString2).concat(InputString3);'
		}]
	},
	concat4: {
		description: 'concatenate 4 strings',
		params: [
		    {type: 'STRING', mode: 'IN', id: 'InputString1'},
		    {type: 'STRING', mode: 'IN', id: 'InputString2'},
		    {type: 'STRING', mode: 'IN', id: 'InputString3'},
		    {type: 'STRING', mode: 'IN', id: 'InputString4'},
		    {type: 'STRING', mode: 'OUT', id: 'OutputString'}
		],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'OutputString = InputString1.concat(InputString2).concat(InputString3).concat(InputString4);'
		}]
	},
	concat5: {
		description: 'concatenate 5 strings',
		params: [
		    {type: 'STRING', mode: 'IN', id: 'InputString1'},
		    {type: 'STRING', mode: 'IN', id: 'InputString2'},
		    {type: 'STRING', mode: 'IN', id: 'InputString3'},
		    {type: 'STRING', mode: 'IN', id: 'InputString4'},
		    {type: 'STRING', mode: 'IN', id: 'InputString5'},
		    {type: 'STRING', mode: 'OUT', id: 'OutputString'}
		],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'OutputString = InputString1.concat(InputString2).concat(InputString3).concat(InputString4).concat(InputString5);'
		}]
	},
	concat6: {
		description: 'concatenate 6 strings',
		params: [
		    {type: 'STRING', mode: 'IN', id: 'InputString1'},
		    {type: 'STRING', mode: 'IN', id: 'InputString2'},
		    {type: 'STRING', mode: 'IN', id: 'InputString3'},
		    {type: 'STRING', mode: 'IN', id: 'InputString4'},
		    {type: 'STRING', mode: 'IN', id: 'InputString5'},
		    {type: 'STRING', mode: 'IN', id: 'InputString6'},
		    {type: 'STRING', mode: 'OUT', id: 'OutputString'}
		],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'OutputString = InputString1.concat(InputString2).concat(InputString3).concat(InputString4).concat(InputString5).concat(InputString6);'
		}]
	},
	concat7: {
		description: 'concatenate 7 strings',
		params: [
		    {type: 'STRING', mode: 'IN', id: 'InputString1'},
		    {type: 'STRING', mode: 'IN', id: 'InputString2'},
		    {type: 'STRING', mode: 'IN', id: 'InputString3'},
		    {type: 'STRING', mode: 'IN', id: 'InputString4'},
		    {type: 'STRING', mode: 'IN', id: 'InputString5'},
		    {type: 'STRING', mode: 'IN', id: 'InputString6'},
		    {type: 'STRING', mode: 'IN', id: 'InputString7'},
		    {type: 'STRING', mode: 'OUT', id: 'OutputString'}
		],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'OutputString = InputString1.concat(InputString2).concat(InputString3).concat(InputString4).concat(InputString5).concat(InputString6).concat(InputString7);'
		}]
	},
	concat8: {
		description: 'concatenate 8 strings',
		params: [
		    {type: 'STRING', mode: 'IN', id: 'InputString1'},
		    {type: 'STRING', mode: 'IN', id: 'InputString2'},
		    {type: 'STRING', mode: 'IN', id: 'InputString3'},
		    {type: 'STRING', mode: 'IN', id: 'InputString4'},
		    {type: 'STRING', mode: 'IN', id: 'InputString5'},
		    {type: 'STRING', mode: 'IN', id: 'InputString6'},
		    {type: 'STRING', mode: 'IN', id: 'InputString7'},
		    {type: 'STRING', mode: 'IN', id: 'InputString8'},
		    {type: 'STRING', mode: 'OUT', id: 'OutputString'}
		],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'OutputString = InputString1.concat(InputString2).concat(InputString3).concat(InputString4).concat(InputString5).concat(InputString6).concat(InputString7).concat(InputString8);'
		}]
	},
	nextInt: {
		description: 'return the passed int incremented by 1',
		params: [{type: 'INT', mode: 'INOUT', id:'InputInt'}],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'InputInt++;'
		}]
	},
	voidApp: {
		description: 'this tool does nothing',
		params: [],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'foo = true;'
		}]
	},
	resetIterator: {
		description: 'set CurrentIndex to 0 and HasNext to (RefArray.length gt. 0)',
		params: [{type: 'REFERENCES', mode:'IN', id:'RefArray'},
		         {type: 'BOOLEAN', mode:'OUT', id:'HasNext'},
		         {type: 'INT', mode: 'OUT', id:'CurrentIndex'}],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'CurrentIndex = 0; HasNext = ( RefArray != null && RefArray.length > 0 );'
		}]
	},
	nextRef: {
		description: 'get the next reference element in an array, update hasNext boolean value and currentIndex index',
		params: [{type: 'REFERENCES', mode:'IN', id:'RefArray'},
		         {type: 'BOOLEAN', mode: 'OUT', id:'HasNext'},
		         {type: 'INT', mode: 'INOUT', id:'CurrentIndex'},
		         {type: 'REFERENCE', mode:'OUT', id:'CurrentValue'}],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script = 'CurrentValue = RefArray[CurrentIndex.intValue()];CurrentIndex++;HasNext = ( CurrentIndex < RefArray.length );'
		}]
	},
	getReferenceFromArray : {
		description: 'get the nth reference from the given reference array. If array is null or shorter than Index, then null is returned.',
		params: [{type: 'REFERENCES', mode:'IN', id:'RefArray'},
		         {type: 'INT', mode: 'IN', id:'Index'},
		         {type: 'REFERENCE', mode: 'OUT', id:'OutRef'}],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'if(RefArray==null || RefArray.length <= Index){OutRef=null;} else {OutRef = RefArray[Index.intValue()];}'
		}]
	},
	getReferenceId: {
		description: 'extract the id from a ReferenceType variable',
		params: [{type: 'REFERENCE', mode: 'IN', id: 'Ref'},
		         {type: 'INT', mode: 'OUT', id:'CardId'}],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'if( Ref == null ){ CardId = -1; } else { CardId = Ref.id; }'
		}]
	},
	getReferenceClassId: {
		description: 'extract the classId from a ReferenceType variable',
		params: [{type: 'REFERENCE', mode: 'IN', id: 'Ref'},
		         {type: 'INT', mode: 'OUT', id: 'ClassId'}],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'if( Ref == null ){ ClassId = -1; } else { ClassId = Ref.idClass; }'
		}]
	},
	getReferenceDescription: {
		description: 'extract the description from a ReferenceType variable',
		params: [{type: 'REFERENCE', mode: 'IN', id: 'Ref'},
		         {type: 'STRING', mode: 'OUT', id: 'Description'}],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'if( Ref == null ){ Description = ""; } else { Description = Ref.description; }'
		}]
	},
	getLookupCode: {
		description: 'extract the Code of the LookupType variable',
		params: [{type: 'LOOKUP', mode:'IN', id:'Lookup'},
		         {type: 'STRING', mode:'OUT', id:'Code'}],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'if( Lookup == null ){ Code = ""; } else { Code = Lookup.code; }'
		}]
	},
	getLookupId: {
		description: 'extract the id of the LookupType variable',
		params: [{type: 'LOOKUP', mode:'IN', id:'Lookup'},
		         {type: 'INT', mode:'OUT', id:'Id'}],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'if( Lookup == null ){ Id = -1; } else { Id = Lookup.id; }'
		}]
	},
	getLookupDescription: {
		description: 'extract the description of the LookupType variable',
		params: [{type: 'LOOKUP', mode:'IN', id:'Lookup'},
		         {type: 'STRING', mode:'OUT', id:'Description'}],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'if( Lookup == null ){ Description = ""; } else { Description = Lookup.description; }'
		}]
	},
	selectAttribute: {
		description: 'select an attribute',
		params: [
		         {type:'STRING',mode:'IN',id:'ClassName'},
		         {type:'STRING',mode:'IN',id:'AttributeName'},
		         {type:'INT',mode:'IN',id:'ObjId'},
		         {type:'STRING',mode:'OUT',id:'AttributeValue'}
		],
		extattrs: [{ToolAgentClass:'org.cmdbuild.shark.toolagent.SelectAttributeToolAgent'}]
	},
	selectAttributeFromReference: {
		description: 'select an attribute from a reference variable',
		params: [
		         {type:'REFERENCE',mode:'IN',id:'ObjReference'},
		         {type:'STRING',mode:'IN',id:'AttributeName'},
		         {type:'STRING',mode:'OUT',id:'AttributeValue'}
		],
		extattrs: [{ToolAgentClass:'org.cmdbuild.shark.toolagent.SelectAttributeToolAgent'}]
	},
	updateAttribute: {
		description: 'update an attribute',
		params: [
		         {type:'STRING',mode:'IN',id:'ClassName'},
		         {type:'STRING',mode:'IN',id:'AttributeName'},
		         {type:'INT',mode:'IN',id:'ObjId'},
		         {type:'STRING',mode:'IN',id:'AttributeValue'},
		         {type:'BOOLEAN',mode:'OUT',id:'Done'}
		],
		extattrs: [{ToolAgentClass:'org.cmdbuild.shark.toolagent.UpdateAttributeToolAgent'}]
	},
	updateAttributeRef: {
		description: 'update an attribute of a reference object',
		params: [
		         {type:'REFERENCE',mode:'IN',id:'ObjRef'},
		         {type:'STRING',mode:'IN',id:'AttributeName'},
		         {type:'STRING',mode:'IN',id:'AttributeValue'},
		         {type:'BOOLEAN',mode:'OUT',id:'Done'}
		],
		extattrs: [{ToolAgentClass:'org.cmdbuild.shark.toolagent.UpdateAttributeToolAgent'}]
	},
	createCard: {
		description: 'create a card',
		params: [
		         {type:'STRING',mode:'IN',id:'ClassName'},
		         {type:'STRING',mode:'IN',id:'CardCode'},
		         {type:'STRING',mode:'IN',id:'CardDescription'},
		         {type:'INT',mode:'OUT',id:'CardId'}
		],
		extattrs: [{ToolAgentClass:'org.cmdbuild.shark.toolagent.CreateCardToolAgent'}]
	},
	createCardRef: {
		description: 'create a card and get the reference',
		params: [
		         {type:'STRING',mode:'IN',id:'ClassName'},
		         {type:'STRING',mode:'IN',id:'CardCode'},
		         {type:'STRING',mode:'IN',id:'CardDescription'},
		         {type:'REFERENCE',mode:'OUT',id:'CardReference'}
		         ],
 		extattrs: [{ToolAgentClass:'org.cmdbuild.shark.toolagent.CreateCardToolAgent'}]
	},
	createRelation: {
		description: 'create a relation',
		params: [
		         {type:'STRING',mode:'IN',id:'DomainName'},
		         {type:'STRING',mode:'IN',id:'ClassName1'},
		         {type:'STRING',mode:'IN',id:'ClassName2'},
		         {type:'INT',mode:'IN',id:'ObjId1'},
		         {type:'INT',mode:'IN',id:'ObjId2'},
		         {type:'BOOLEAN',mode:'OUT',id:'Done'}
		],
		extattrs: [{ToolAgentClass:'org.cmdbuild.shark.toolagent.CreateRelationToolAgent'}]
	},
	createRelationRefs: {
		description: 'create a relation between two references',
		params: [
		         {type:'STRING',mode:'IN',id:'DomainName'},
		         {type:'REFERENCE',mode:'IN',id:'ObjReference1'},
		         {type:'REFERENCE',mode:'IN',id:'ObjReference2'},
		         {type:'BOOLEAN',mode:'OUT',id:'Done'}
		         ],
		extattrs: [{ToolAgentClass:'org.cmdbuild.shark.toolagent.CreateRelationToolAgent'}]
	},
	createRelation1Ref: {
		description: 'create relation between 2 cards, the first use a reference variable',
		params: [
		         {type:'STRING',mode:'IN',id:'DomainName'},
		         {type:'REFERENCE',mode:'IN',id:'ObjReference1'},
		         {type:'STRING',mode:'IN',id:'ClassName2'},
		         {type:'INT',mode:'IN',id:'ObjId2'},
		         {type:'BOOLEAN',mode:'OUT',id:'Done'}
		         ],
		extattrs: [{ToolAgentClass:'org.cmdbuild.shark.toolagent.CreateRelationToolAgent'}]
	},
	createRelation2Ref: {
		description: 'create relation between 2 cards, the second use a reference variable',
		params: [
		         {type:'STRING',mode:'IN',id:'DomainName'},
		         {type:'STRING',mode:'IN',id:'ClassName1'},
		         {type:'INT',mode:'IN',id:'ObjId1'},
		         {type:'REFERENCE',mode:'IN',id:'ObjReference2'},
		         {type:'BOOLEAN',mode:'OUT',id:'Done'}
		         ],
		extattrs: [{ToolAgentClass:'org.cmdbuild.shark.toolagent.CreateRelationToolAgent'}]
	},
	intToString: {
		description: 'convert an Int to a String',
		params: [
		         {type:'INT',mode:'IN',id:'InputInt'},
		         {type:'STRING',mode:'OUT',id:'OutputString'}
		         ],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'OutputString = String.valueOf(InputInt);'
		}]
	},
	floatToString: {
		description: 'convert a Float to a String',
		params: [
		         {type:'DOUBLE',mode:'IN',id:'InputFloat'},
		         {type:'STRING',mode:'OUT',id:'OutputString'}
		         ],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'OutputString = String.valueOf(InputFloat);'
		}]
	},
	boolToString: {
		description: 'convert a Bool to a String',
		params: [
		         {type:'BOOLEAN',mode:'IN',id:'InputBool'},
		         {type:'STRING',mode:'OUT',id:'OutputString'}
		         ],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'OutputString = String.valueOf(InputBool);'
		}]
	},
	dateToString: {
		description: 'convert a Date to a String',
		params: [
		         {type:'DATETIME',mode:'IN',id:'InputDate'},
		         {type:'STRING',mode:'OUT',id:'OutputString'}
		         ],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'OutputString = "";if(InputDate!=null){OutputString = new java.text.SimpleDateFormat("yyyy-MM-dd\'T\'HH:mm:ss").format(InputDate.getTime());}else{System.out.println("null date: " + InputDate);}'
		}]
	},
	lookupToString: {
		description: 'extract the lookup id and convert it to string',
		params: [{type:'LOOKUP', mode:'IN', id:'InputLookup'},
		         {type:'STRING', mode: 'OUT', id: 'OutputString'}],
 		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'OutputString = InputLookup.id + "";'
		}]
	},
	referenceToString: {
		description: 'extract the reference id and convert it to string',
		params: [{type:'REFERENCE', mode:'IN', id:'InputReference'},
		         {type:'STRING', mode: 'OUT', id: 'OutputString'}],
 		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'if(InputReference==null) OutputString =null; else OutputString =InputReference.id + "";'
		}]
	},
	getCurrentTimestamp: {
		description: 'get the systen timestamp',
		params: [{type:'DATETIME', mode:'OUT',id:'TheDate'}],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'TheDate = java.util.Calendar.getInstance();'
		}]
	},
	suspendProcess: {
		description: 'suspend the process. Use "CURRENT" as process instance id to pause the current process (paused to the next manual activity)',
		params: [{type:'STRING',mode:'IN',id:'ProcessInstanceId'}],
		extattrs: [{
			ToolAgentClass: 'org.cmdbuild.shark.toolagent.ProcessChangeStateToolAgent',
			State: 'Suspend'
		}]
	},
	resumeProcess: {
		description: 'resume the process',
		params: [{type:'STRING',mode:'IN',id:'ProcessInstanceId'},
                 {type:'INT',mode:'IN',id:'Complete'}],
		extattrs: [{
			ToolAgentClass: 'org.cmdbuild.shark.toolagent.ProcessChangeStateToolAgent',
			State: 'Resume'
		}]
	},
	stringCopy: {
		description: 'copy a string into another',
		params: [{type:'STRING',mode:'IN',id:'From'},{type:'STRING',mode:'OUT',id:'To'}],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'To = new java.lang.String(From);'
		}]
	},
	createReferenceObj: {
		description: 'create a reference object from classname, objid and description',
		params: [{type:'STRING',mode:'IN',id:'ClassName'},
		         {type:'INT',mode:'IN',id:'ObjId'},
		         {type:'STRING',mode:'IN',id:'Description'},
		         {type:'REFERENCE',mode:'OUT',id:'OutRef'}],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'tmp = org.cmdbuild.shark.util.CmdbuildUtils.getInstance().getStructureFromName( ClassName ).getId(); OutRef = new org.cmdbuild.workflow.type.ReferenceType( ObjId.intValue(),tmp,Description );'
		}]
	},
	externalSync: {
		description: '',
		params: [{type:'STRING',mode:'IN',id:'XMLString'},
		         {type:'STRING',mode:'OUT',id:'Out'}],
		extattrs: [{
			ToolAgentClass: 'org.cmdbuild.shark.toolagent.ExternalSyncToolAgent'
		}]
	},
	dateCopy: {
		description: 'copy a date into another',
		params: [{type:'DATETIME',mode:'IN',id:'From'},{type:'DATETIME',mode:'OUT',id:'To'}],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'To = From.clone();'
		}]
	},
	intCopy: {
		description: 'copy an intenger into another',
		params: [{type:'INT',mode:'IN',id:'From'},{type:'INT',mode:'OUT',id:'To'}],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'To = new java.lang.Long(From.longValue());'
		}]
	},
	floatCopy: {
		description: 'copy a float into another',
		params: [{type:'DOUBLE',mode:'IN',id:'From'},{type:'DOUBLE',mode:'OUT',id:'To'}],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'To = new java.lang.Double(From.doubleValue());'
		}]
	},
	boolCopy: {
		description: 'copy a boolean into another',
		params: [{type:'BOOLEAN',mode:'IN',id:'From'},{type:'BOOLEAN',mode:'OUT',id:'To'}],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'To = new java.lang.Boolean(From.booleanValue());'
		}]
	},
	stringToInt: {
		description: 'convert a string to an integer',
		params: [{type:'STRING',mode:'IN',id:'InputString'},{type:'INT',mode:'OUT',id:'OutputInteger'}],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'OutputInteger = new java.lang.Long(InputString);'
		}]
	},
	stringToFloat: {
		description: 'convert a string to a float',
		params: [{type:'STRING',mode:'IN',id:'InputString'},{type:'DOUBLE',mode:'OUT',id:'OutputFloat'}],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'OutputInteger = new java.lang.Double(InputString);'
		}]
	},
	stringToBool: {
		description: 'convert a string to a boolean',
		params: [{type:'STRING',mode:'IN',id:'InputString'},{type:'BOOLEAN',mode:'OUT',id:'OutputBoolean'}],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'OutputBoolean = new java.lang.Boolean(InputString);'
		}]
	},
	stringToDate: {
		description: 'convert a string into a date - accept YY/mm/dd or YY/mm/dd HH:mm:ss formatted strings',
		params: [{type:'STRING',mode:'IN',id:'InputString'},{type:'DATETIME',mode:'OUT',id:'OutputDate'}],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'if (InputString == null || InputString.trim().length() == 0) { OutputDate=null; } else { if (InputString.length() == 8) { sdf = new java.text.SimpleDateFormat("dd/MM/yy"); } else if (InputString.length() == 17) { sdf = new java.text.SimpleDateFormat("dd/MM/yy HH:mm:ss"); } else { throw new IllegalArgumentException(String.format("Unrecognized format: \"%s\"", InputString)); } calendar = java.util.Calendar.getInstance(); date = sdf.parse(InputString); calendar.setTime(date); OutputDate=calendar; }'
		}]
	},
	clearReference: {
		description: 'clear a reference object (set id = -1)',
		params: [{type:'REFERENCE',mode:'IN',id:'Ref'}],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'Ref.id = -1;'
		}]
	},
	clearLookup: {
		description: 'clear a lookup object (set id = -1)',
		params: [{type:'LOOKUP',mode:'IN',id:'Lookup'}],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'Lookup.id = -1;'
		}]
	},
	clearIterator: {
		description: 'clear an iterator object (set Array to null, HasNext to false and Index to 0)',
		params: [{type: 'REFERENCES', mode:'INOUT', id:'Array'},
		         {type: 'BOOLEAN', mode:'INOUT', id:'HasNext'},
		         {type: 'INT', mode: 'INOUT', id:'Index'}],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'Array=null; Index=0; HasNext=false;'
		}]
	},
	getReportFullUrl: {
		description: 'obtain the full Url to a report created by cmdbuild and returned by the createReport ext.attr.',
		params: [{type:'STRING',mode:'INOUT',id:'ReportUrl'}],
		extattrs: [{
			ToolAgentClass: 'org.cmdbuild.shark.toolagent.FullReportURLToolAgent'
		}]
	},
	selectReferenceByReference: {
		description: 'select a reference from another reference using its attribute name',
		params: [
			{type:'REFERENCE',mode:'IN',id:'ObjReference'},
			{type:'STRING',mode:'IN',id:'AttributeName'},
			{type:'REFERENCE',mode:'OUT',id:'OutRef'}],
		extattrs: [{
			ToolAgentClass: 'org.cmdbuild.shark.toolagent.SelectReferenceByReferenceToolAgent'
		}]
	},
		deleteRelation: {
		description: 'delete a relation',
		params: [
		         {type:'STRING',mode:'IN',id:'DomainName'},
		         {type:'STRING',mode:'IN',id:'ClassName1'},
		         {type:'STRING',mode:'IN',id:'ClassName2'},
		         {type:'INT',mode:'IN',id:'ObjId1'},
		         {type:'INT',mode:'IN',id:'ObjId2'},
		         {type:'BOOLEAN',mode:'OUT',id:'Done'}
		],
		extattrs: [{ToolAgentClass:'org.cmdbuild.shark.toolagent.ManageRelationToolAgent'}]
	},
		deleteRelationByReference: {
		description: 'delete a relation using a reference',
		params: [
		         {type:'STRING',mode:'IN',id:'DomainName'},
		         {type:'REFERENCE',mode:'IN',id:'ObjReference1'},
		         {type:'REFERENCE',mode:'IN',id:'ObjReference2'},
		         {type:'BOOLEAN',mode:'OUT',id:'Done'}
		         ],
		extattrs: [{ToolAgentClass:'org.cmdbuild.shark.toolagent.ManageRelationToolAgent'}]
	},
	addDays: {
		description: 'add a given number of days to the specified date ',
		params: [{type:'DATETIME',mode:'IN',id:'InputDate'},
		{type:'INT',mode:'IN',id:'Days'},
		{type:'DATETIME',mode:'OUT',id:'OutputDate'}],
		extattrs: [{
			ToolAgentClass: 'org.enhydra.shark.toolagent.BshToolAgent',
			Script: 'days= Days.intValue(); calendar = Calendar.getInstance(); calendar.setTime(InputDate); calendar.add(Calendar.DATE,days); OutputDate=calendar.getTime();'
		}]
	}
}
